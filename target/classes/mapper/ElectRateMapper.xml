<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.epss.dao.ElectRateMapper">
  <resultMap id="BaseResultMap" type="vip.epss.domain.ElectRate">
    <id column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="room_End_pay" jdbcType="DOUBLE" property="roomEndPay" />
    <result column="remain" jdbcType="DOUBLE" property="remain" />
    <result column="date" jdbcType="VARCHAR" property="date" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    room_id, room_end_pay, remain,date
  </sql>
  <select id="selectByExample" parameterType="vip.epss.domain.ElectRateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from elect_rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from elect_rate
    where room_id = #{roomId,jdbcType=INTEGER} order by `date` desc limit 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from elect_rate
    where room_id = #{roomId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="vip.epss.domain.ElectRateExample">
    delete from elect_rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="vip.epss.domain.ElectRate">
    insert into elect_rate (room_id, room_end_pay, remain,date
      )
    values (#{roomId,jdbcType=INTEGER}, #{roomEndPay,jdbcType=DOUBLE}, #{remain,jdbcType=DOUBLE}, #{date}
      )
  </insert>
  <insert id="insertSelective" parameterType="vip.epss.domain.ElectRate">
    insert into elect_rate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        room_id,
      </if>
      <if test="roomEndPay != null">
        room_end_pay,
      </if>
      <if test="remain != null">
        remain,
      </if>
      <if test="date != null">
        `date`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="roomEndPay != null">
        #{roomEndPay,jdbcType=DOUBLE},
      </if>
      <if test="remain != null">
        #{remain,jdbcType=DOUBLE},
      </if>
      <if test="date != null">
        #{date},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vip.epss.domain.ElectRateExample" resultType="java.lang.Long">
    select count(*) from elect_rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update elect_rate
    <set>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.roomEndPay != null">
        room_end_pay = #{record.roomEndPay,jdbcType=DOUBLE},
      </if>
      <if test="record.remain != null">
        remain = #{record.remain,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update elect_rate
    set room_id = #{record.roomId,jdbcType=INTEGER},
      room_end_pay = #{record.roomEndPay,jdbcType=DOUBLE},
      remain = #{record.remain,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vip.epss.domain.ElectRate">
    update elect_rate
    <set>
      <if test="roomEndPay != null">
        room_end_pay = #{roomEndPay,jdbcType=DOUBLE},
      </if>
      <if test="remain != null">
        remain = #{remain,jdbcType=DOUBLE},
      </if>
    </set>
    where room_id = #{roomId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="vip.epss.domain.ElectRate">
    update elect_rate
    set room_end_pay = #{roomIsPay,jdbcType=DOUBLE},
      remain = #{remain,jdbcType=DOUBLE}
    where room_id = #{roomId,jdbcType=INTEGER}
  </update>


  <select id="findLastWeek" resultType="java.util.LinkedHashMap">
    SELECT
      a.click_date readTime,
      IFNULL(b.total,0) as electricityConsumption
    FROM
      (
        SELECT
          DATE_SUB( CURDATE( ), INTERVAL 7 DAY ) AS click_date UNION ALL
        SELECT
          DATE_SUB( CURDATE( ), INTERVAL 6 DAY ) AS click_date UNION ALL
        SELECT
          DATE_SUB( CURDATE( ), INTERVAL 5 DAY ) AS click_date UNION ALL
        SELECT
          DATE_SUB( CURDATE( ), INTERVAL 4 DAY ) AS click_date UNION ALL
        SELECT
          DATE_SUB( CURDATE( ), INTERVAL 3 DAY ) AS click_date UNION ALL
        SELECT
          DATE_SUB( CURDATE( ), INTERVAL 2 DAY ) AS click_date UNION ALL
        SELECT
          DATE_SUB( CURDATE( ), INTERVAL 1 DAY ) AS click_date
      ) a
        LEFT JOIN (
        SELECT
          DATE_FORMAT( `date`, '%Y-%m-%d' ) AS datetime,
          sum( remain ) AS total
        FROM
          elect_rate
        WHERE
          room_id = #{roomId}
        GROUP BY
          DATE_FORMAT( date, '%Y-%m-%d' )
      ) b ON a.click_date = b.datetime
    order by a.click_date
  </select>

  <select id="findLastThreeList" resultType="java.util.LinkedHashMap">
    select DATE_FORMAT( `date`, '%Y-%m-%d' )  dayTime,DATE_FORMAT( `date`, '%h:%m:%s' ) hourTime,
           remain from elect_rate where room_id = #{roomId} order by `date` desc limit 3
  </select>
</mapper>