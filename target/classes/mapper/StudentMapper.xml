<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.epss.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="vip.epss.domain.Student">
    <id column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="room_no" jdbcType="INTEGER" property="roomNo" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="BIT" property="gender" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="head_image" jdbcType="VARCHAR" property="headImage" />
    <result column="bed_num" jdbcType="VARCHAR" property="bedNum" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="stu_class" jdbcType="VARCHAR" property="stuClass" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, room_no, name, gender, phone_num, bed_num, username, password,stu_class
  </sql>

  <select id="selectByLogin" parameterType="vip.epss.domain.Student" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />,head_image  from student where username = #{username,jdbcType=INTEGER}
  </select>


  <select id="selectByExample" parameterType="vip.epss.domain.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    order by stu_id desc
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where stu_id = #{stuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where stu_id = #{stuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="vip.epss.domain.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="vip.epss.domain.Student">
    insert into student (stu_id, room_no, name, 
      gender, phone_num, head_image,
      bed_num, username, password
      )
    values (#{stuId,jdbcType=INTEGER}, #{roomNo,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=BIT}, #{phoneNum,jdbcType=VARCHAR}, #{headImage,jdbcType=VARCHAR},
      #{bedNum,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="vip.epss.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="roomNo != null">
        room_no,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
      <if test="bedNum != null">
        bed_num,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="stuClass != null">
        stu_class,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="roomNo != null">
        #{roomNo,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="bedNum != null">
        #{bedNum,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="stuClass != null">
        #{stuClass},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vip.epss.domain.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.roomNo != null">
        room_no = #{record.roomNo,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=BIT},
      </if>
      <if test="record.phoneNum != null">
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.headImage != null">
        head_image = #{record.headImage,jdbcType=VARCHAR},
      </if>
      <if test="record.bedNum != null">
        bed_num = #{record.bedNum,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set stu_id = #{record.stuId,jdbcType=INTEGER},
      room_no = #{record.roomNo,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=BIT},
      phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      head_image = #{record.headImage,jdbcType=VARCHAR},
      bed_num = #{record.bedNum,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vip.epss.domain.Student">
    update student
    <set>
      <if test="roomNo != null">
        room_no = #{roomNo,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="bedNum != null">
        bed_num = #{bedNum,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="vip.epss.domain.Student">
    update student
    set room_no = #{roomNo,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      head_image = #{headImage,jdbcType=VARCHAR},
      bed_num = #{bedNum,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>

  <resultMap id="roomResult" type="java.lang.Integer" >
    <result column="room_id" property="roomId" jdbcType="INTEGER" />
  </resultMap>

  <!--宿舍集合  -->
  <select id="findRoomAll" resultMap="roomResult">
    select room_id from room
  </select>

  <resultMap id="classResult" type="java.lang.String" >
    <result column="class_name" property="className" jdbcType="VARCHAR" />
  </resultMap>

  <!--  班级集合-->
  <select id="findClasssesAll" resultMap="classResult">
    select class_name from class_list
  </select>

</mapper>